[0;36m[doctest] [0mdoctest version is "2.4.6"
[0;36m[doctest] [0mrun with "--help" for options
[0;33m===============================================================================
[0;37m../test.cpp:28:
[0;33mTEST CASE:  [0mTesting Input/Output Module

[0;37m../test.cpp:30: [1;32mSUCCESS: [0;36mREQUIRE( Input::v_keypresses.size() == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;37m../test.cpp:31: [1;32mSUCCESS: [0;36mREQUIRE( Input::v_keyreleases.size() == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;37m../test.cpp:47: [1;32mSUCCESS: [0;36mCHECK( Input::v_keypresses.size() == 1 ) [0mis correct!
  values: CHECK( 1 == 1 )

[0;37m../test.cpp:48: [1;32mSUCCESS: [0;36mCHECK( Input::v_keyreleases.size() == 1 ) [0mis correct!
  values: CHECK( 1 == 1 )

[0m0.000138 s: Testing Input/Output Module
[0m[0;33m===============================================================================
[0;37m../test.cpp:51:
[0;33mTEST CASE:  [0mTesting Filesystem Module
  Opening valid project

[0;37m../test.cpp:57: [1;32mSUCCESS: [0;36mREQUIRE( Project::nodes_count == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;37m../test.cpp:58: [1;32mSUCCESS: [0;36mREQUIRE( Project::connections_count == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;37m../test.cpp:59: [1;32mSUCCESS: [0;36mREQUIRE( Project::has_open_proj == false ) [0mis correct!
  values: REQUIRE( false == false )

[0;37m../test.cpp:60: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../../demo/name.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;37m../test.cpp:61: [1;32mSUCCESS: [0;36mREQUIRE( Project::nodes_count == 6 ) [0mis correct!
  values: REQUIRE( 6 == 6 )

[0;37m../test.cpp:62: [1;32mSUCCESS: [0;36mREQUIRE( Project::connections_count == 10 ) [0mis correct!
  values: REQUIRE( 10 == 10 )

[0;37m../test.cpp:63: [1;32mSUCCESS: [0;36mREQUIRE( Project::has_open_proj == true ) [0mis correct!
  values: REQUIRE( true == true )

[0;33m===============================================================================
[0;37m../test.cpp:51:
[0;33mTEST CASE:  [0mTesting Filesystem Module
  Closing valid project

[0;37m../test.cpp:69: [1;32mSUCCESS: [0;36mREQUIRE( Project::nodes_count == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;37m../test.cpp:70: [1;32mSUCCESS: [0;36mREQUIRE( Project::connections_count == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;37m../test.cpp:71: [1;32mSUCCESS: [0;36mREQUIRE( Project::has_open_proj == false ) [0mis correct!
  values: REQUIRE( false == false )

[0;33m===============================================================================
[0;37m../test.cpp:51:
[0;33mTEST CASE:  [0mTesting Filesystem Module
  Opening invalid project

[0;37m../test.cpp:76: [1;32mSUCCESS: [0;36mREQUIRE( Project::nodes_count == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;37m../test.cpp:77: [1;32mSUCCESS: [0;36mREQUIRE( Project::connections_count == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;37m../test.cpp:78: [1;32mSUCCESS: [0;36mREQUIRE( Project::has_open_proj == false ) [0mis correct!
  values: REQUIRE( false == false )

[0;37m../test.cpp:79: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../../demo/invalid.cn") == -1 ) [0mis correct!
  values: REQUIRE( -1 == -1 )

[0;37m../test.cpp:80: [1;32mSUCCESS: [0;36mREQUIRE( Project::nodes_count == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;37m../test.cpp:81: [1;32mSUCCESS: [0;36mREQUIRE( Project::connections_count == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;37m../test.cpp:82: [1;32mSUCCESS: [0;36mREQUIRE( Project::has_open_proj == false ) [0mis correct!
  values: REQUIRE( false == false )

[0;33m===============================================================================
[0;37m../test.cpp:51:
[0;33mTEST CASE:  [0mTesting Filesystem Module
[0;33m
DEEPEST SUBCASE STACK REACHED (DIFFERENT FROM THE CURRENT ONE):
[0m  Opening invalid project

[0m0.001734 s: Testing Filesystem Module
[0m[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic

[0;37m../test.cpp:90: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_op.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  INTEGER

[0;37m../test.cpp:95: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f4bdac0 != NULL )

[0;37m../test.cpp:96: [1;32mSUCCESS: [0;36mREQUIRE( std::get<int>(var_a->m_value.data) == 32 ) [0mis correct!
  values: REQUIRE( 32 == 32 )

[0;37m../test.cpp:98: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f4bdbc0 != NULL )

[0;37m../test.cpp:99: [1;32mSUCCESS: [0;36mREQUIRE( std::get<int>(var_b->m_value.data) == 64 ) [0mis correct!
  values: REQUIRE( 64 == 64 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  INTEGER
  Testing Addition Logic

[0;37m../test.cpp:105: [1;32mSUCCESS: [0;36mREQUIRE( node_var != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f4bf340 != NULL )

[0;37m../test.cpp:106: [1;32mSUCCESS: [0;36mREQUIRE( std::get<int>(node_var->m_value.data) == 96 ) [0mis correct!
  values: REQUIRE( 96 == 96 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic

[0;37m../test.cpp:90: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_op.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  INTEGER

[0;37m../test.cpp:95: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f4ce120 != NULL )

[0;37m../test.cpp:96: [1;32mSUCCESS: [0;36mREQUIRE( std::get<int>(var_a->m_value.data) == 32 ) [0mis correct!
  values: REQUIRE( 32 == 32 )

[0;37m../test.cpp:98: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f4ce200 != NULL )

[0;37m../test.cpp:99: [1;32mSUCCESS: [0;36mREQUIRE( std::get<int>(var_b->m_value.data) == 64 ) [0mis correct!
  values: REQUIRE( 64 == 64 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  INTEGER
  Testing Subtraction Logic

[0;37m../test.cpp:112: [1;32mSUCCESS: [0;36mREQUIRE( node_var != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f4cf8f0 != NULL )

[0;37m../test.cpp:113: [1;32mSUCCESS: [0;36mREQUIRE( std::get<int>(node_var->m_value.data) == -32 ) [0mis correct!
  values: REQUIRE( -32 == -32 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic

[0;37m../test.cpp:90: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_op.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  INTEGER

[0;37m../test.cpp:95: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f4dd9f0 != NULL )

[0;37m../test.cpp:96: [1;32mSUCCESS: [0;36mREQUIRE( std::get<int>(var_a->m_value.data) == 32 ) [0mis correct!
  values: REQUIRE( 32 == 32 )

[0;37m../test.cpp:98: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f4ddad0 != NULL )

[0;37m../test.cpp:99: [1;32mSUCCESS: [0;36mREQUIRE( std::get<int>(var_b->m_value.data) == 64 ) [0mis correct!
  values: REQUIRE( 64 == 64 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  INTEGER
  Testing Multiplication Logic

[0;37m../test.cpp:119: [1;32mSUCCESS: [0;36mREQUIRE( node_var != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f4de6e0 != NULL )

[0;37m../test.cpp:120: [1;32mSUCCESS: [0;36mREQUIRE( std::get<int>(node_var->m_value.data) == 2048 ) [0mis correct!
  values: REQUIRE( 2048 == 2048 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic

[0;37m../test.cpp:90: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_op.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  INTEGER

[0;37m../test.cpp:95: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f4ed380 != NULL )

[0;37m../test.cpp:96: [1;32mSUCCESS: [0;36mREQUIRE( std::get<int>(var_a->m_value.data) == 32 ) [0mis correct!
  values: REQUIRE( 32 == 32 )

[0;37m../test.cpp:98: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f4ed460 != NULL )

[0;37m../test.cpp:99: [1;32mSUCCESS: [0;36mREQUIRE( std::get<int>(var_b->m_value.data) == 64 ) [0mis correct!
  values: REQUIRE( 64 == 64 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  INTEGER
  Testing Division Logic

[0;37m../test.cpp:126: [1;32mSUCCESS: [0;36mREQUIRE( node_var != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f4eecf0 != NULL )

[0;37m../test.cpp:127: [1;32mSUCCESS: [0;36mREQUIRE( std::get<int>(node_var->m_value.data) == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic

[0;37m../test.cpp:90: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_op.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  FLOAT

[0;37m../test.cpp:134: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f4febe0 != NULL )

[0;37m../test.cpp:135: [1;32mSUCCESS: [0;36mREQUIRE( std::get<float>(var_a->m_value.data) == 32.0f ) [0mis correct!
  values: REQUIRE( 32.0f == 32.0f )

[0;37m../test.cpp:137: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f4fed00 != NULL )

[0;37m../test.cpp:138: [1;32mSUCCESS: [0;36mREQUIRE( std::get<float>(var_b->m_value.data) == 24.0f ) [0mis correct!
  values: REQUIRE( 24.0f == 24.0f )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  FLOAT
  Testing Addition Logic

[0;37m../test.cpp:144: [1;32mSUCCESS: [0;36mREQUIRE( node_var != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f4fce70 != NULL )

[0;37m../test.cpp:145: [1;32mSUCCESS: [0;36mREQUIRE( std::get<float>(node_var->m_value.data) == 56.0f ) [0mis correct!
  values: REQUIRE( 56.0f == 56.0f )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic

[0;37m../test.cpp:90: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_op.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  FLOAT

[0;37m../test.cpp:134: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f50e580 != NULL )

[0;37m../test.cpp:135: [1;32mSUCCESS: [0;36mREQUIRE( std::get<float>(var_a->m_value.data) == 32.0f ) [0mis correct!
  values: REQUIRE( 32.0f == 32.0f )

[0;37m../test.cpp:137: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f50e6a0 != NULL )

[0;37m../test.cpp:138: [1;32mSUCCESS: [0;36mREQUIRE( std::get<float>(var_b->m_value.data) == 24.0f ) [0mis correct!
  values: REQUIRE( 24.0f == 24.0f )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  FLOAT
  Testing Subtraction Logic

[0;37m../test.cpp:151: [1;32mSUCCESS: [0;36mREQUIRE( node_var != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f50c910 != NULL )

[0;37m../test.cpp:152: [1;32mSUCCESS: [0;36mREQUIRE( std::get<float>(node_var->m_value.data) == 8.0f ) [0mis correct!
  values: REQUIRE( 8.0f == 8.0f )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic

[0;37m../test.cpp:90: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_op.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  FLOAT

[0;37m../test.cpp:134: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f51def0 != NULL )

[0;37m../test.cpp:135: [1;32mSUCCESS: [0;36mREQUIRE( std::get<float>(var_a->m_value.data) == 32.0f ) [0mis correct!
  values: REQUIRE( 32.0f == 32.0f )

[0;37m../test.cpp:137: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f51e010 != NULL )

[0;37m../test.cpp:138: [1;32mSUCCESS: [0;36mREQUIRE( std::get<float>(var_b->m_value.data) == 24.0f ) [0mis correct!
  values: REQUIRE( 24.0f == 24.0f )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  FLOAT
  Testing Multiplication Logic

[0;37m../test.cpp:158: [1;32mSUCCESS: [0;36mREQUIRE( node_var != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f51c380 != NULL )

[0;37m../test.cpp:159: [1;32mSUCCESS: [0;36mREQUIRE( std::get<float>(node_var->m_value.data) == (32.0f * 24.0f) ) [0mis correct!
  values: REQUIRE( 768.0f == 768.0f )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic

[0;37m../test.cpp:90: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_op.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  FLOAT

[0;37m../test.cpp:134: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f52d840 != NULL )

[0;37m../test.cpp:135: [1;32mSUCCESS: [0;36mREQUIRE( std::get<float>(var_a->m_value.data) == 32.0f ) [0mis correct!
  values: REQUIRE( 32.0f == 32.0f )

[0;37m../test.cpp:137: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f52d960 != NULL )

[0;37m../test.cpp:138: [1;32mSUCCESS: [0;36mREQUIRE( std::get<float>(var_b->m_value.data) == 24.0f ) [0mis correct!
  values: REQUIRE( 24.0f == 24.0f )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  FLOAT
  Testing Division Logic

[0;37m../test.cpp:165: [1;32mSUCCESS: [0;36mREQUIRE( node_var != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f52ca40 != NULL )

[0;37m../test.cpp:166: [1;32mSUCCESS: [0;36mREQUIRE( std::get<float>(node_var->m_value.data) == (32.0f/24.0f) ) [0mis correct!
  values: REQUIRE( 1.33333f == 1.33333f )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic

[0;37m../test.cpp:90: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_op.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  DOUBLE

[0;37m../test.cpp:173: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f53b750 != NULL )

[0;37m../test.cpp:174: [1;32mSUCCESS: [0;36mREQUIRE( std::get<double>(var_a->m_value.data) == 32.0 ) [0mis correct!
  values: REQUIRE( 32.0 == 32.0 )

[0;37m../test.cpp:176: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f53b870 != NULL )

[0;37m../test.cpp:177: [1;32mSUCCESS: [0;36mREQUIRE( std::get<double>(var_b->m_value.data) == 24.0 ) [0mis correct!
  values: REQUIRE( 24.0 == 24.0 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  DOUBLE
  Testing Addition Logic

[0;37m../test.cpp:183: [1;32mSUCCESS: [0;36mREQUIRE( node_var != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f53be00 != NULL )

[0;37m../test.cpp:184: [1;32mSUCCESS: [0;36mREQUIRE( std::get<double>(node_var->m_value.data) == 56.0 ) [0mis correct!
  values: REQUIRE( 56.0 == 56.0 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic

[0;37m../test.cpp:90: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_op.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  DOUBLE

[0;37m../test.cpp:173: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f54b0c0 != NULL )

[0;37m../test.cpp:174: [1;32mSUCCESS: [0;36mREQUIRE( std::get<double>(var_a->m_value.data) == 32.0 ) [0mis correct!
  values: REQUIRE( 32.0 == 32.0 )

[0;37m../test.cpp:176: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f54b1e0 != NULL )

[0;37m../test.cpp:177: [1;32mSUCCESS: [0;36mREQUIRE( std::get<double>(var_b->m_value.data) == 24.0 ) [0mis correct!
  values: REQUIRE( 24.0 == 24.0 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  DOUBLE
  Testing Subtraction Logic

[0;37m../test.cpp:190: [1;32mSUCCESS: [0;36mREQUIRE( node_var != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f54b9b0 != NULL )

[0;37m../test.cpp:191: [1;32mSUCCESS: [0;36mREQUIRE( std::get<double>(node_var->m_value.data) == 8.0 ) [0mis correct!
  values: REQUIRE( 8.0 == 8.0 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic

[0;37m../test.cpp:90: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_op.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  DOUBLE

[0;37m../test.cpp:173: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f55aa40 != NULL )

[0;37m../test.cpp:174: [1;32mSUCCESS: [0;36mREQUIRE( std::get<double>(var_a->m_value.data) == 32.0 ) [0mis correct!
  values: REQUIRE( 32.0 == 32.0 )

[0;37m../test.cpp:176: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f55ab60 != NULL )

[0;37m../test.cpp:177: [1;32mSUCCESS: [0;36mREQUIRE( std::get<double>(var_b->m_value.data) == 24.0 ) [0mis correct!
  values: REQUIRE( 24.0 == 24.0 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  DOUBLE
  Testing Multiplication Logic

[0;37m../test.cpp:197: [1;32mSUCCESS: [0;36mREQUIRE( node_var != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f55b450 != NULL )

[0;37m../test.cpp:198: [1;32mSUCCESS: [0;36mREQUIRE( std::get<double>(node_var->m_value.data) == (32.0 * 24.0) ) [0mis correct!
  values: REQUIRE( 768.0 == 768.0 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic

[0;37m../test.cpp:90: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_op.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  DOUBLE

[0;37m../test.cpp:173: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f56a3e0 != NULL )

[0;37m../test.cpp:174: [1;32mSUCCESS: [0;36mREQUIRE( std::get<double>(var_a->m_value.data) == 32.0 ) [0mis correct!
  values: REQUIRE( 32.0 == 32.0 )

[0;37m../test.cpp:176: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f56a500 != NULL )

[0;37m../test.cpp:177: [1;32mSUCCESS: [0;36mREQUIRE( std::get<double>(var_b->m_value.data) == 24.0 ) [0mis correct!
  values: REQUIRE( 24.0 == 24.0 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  DOUBLE
  Testing Division Logic

[0;37m../test.cpp:204: [1;32mSUCCESS: [0;36mREQUIRE( node_var != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f56af10 != NULL )

[0;37m../test.cpp:205: [1;32mSUCCESS: [0;36mREQUIRE( std::get<double>(node_var->m_value.data) == (32.0/24.0) ) [0mis correct!
  values: REQUIRE( 1.3333333333 == 1.3333333333 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic

[0;37m../test.cpp:90: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_op.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  STRING

[0;37m../test.cpp:212: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f57b3a0 != NULL )

[0;37m../test.cpp:213: [1;32mSUCCESS: [0;36mREQUIRE( (std::get<std::string>(var_a->m_value.data).compare("hello, ") == 0) ) [0mis correct!
  values: REQUIRE( true )

[0;37m../test.cpp:215: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f57b4c0 != NULL )

[0;37m../test.cpp:216: [1;32mSUCCESS: [0;36mREQUIRE( (std::get<std::string>(var_b->m_value.data)).compare("world!") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  STRING
  Testing Addition Logic

[0;37m../test.cpp:222: [1;32mSUCCESS: [0;36mREQUIRE( node_var != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f57b740 != NULL )

[0;37m../test.cpp:223: [1;32mSUCCESS: [0;36mREQUIRE( (std::get<std::string>(node_var->m_value.data)).compare("hello, world!") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic

[0;37m../test.cpp:230: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cast.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From INTEGER

[0;37m../test.cpp:237: [1;32mSUCCESS: [0;36mREQUIRE( var != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f585b40 != NULL )

[0;37m../test.cpp:238: [1;32mSUCCESS: [0;36mREQUIRE( std::get<int>(var->m_value.data) == val ) [0mis correct!
  values: REQUIRE( 8 == 8 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From INTEGER
  To BOOL

[0;37m../test.cpp:244: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f585e90 != NULL )

[0;37m../test.cpp:245: [1;32mSUCCESS: [0;36mREQUIRE( std::get<bool>(var2->m_value.data) == (bool)val ) [0mis correct!
  values: REQUIRE( true == true )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic

[0;37m../test.cpp:230: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cast.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From INTEGER

[0;37m../test.cpp:237: [1;32mSUCCESS: [0;36mREQUIRE( var != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f594110 != NULL )

[0;37m../test.cpp:238: [1;32mSUCCESS: [0;36mREQUIRE( std::get<int>(var->m_value.data) == val ) [0mis correct!
  values: REQUIRE( 8 == 8 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From INTEGER
  To FLOAT

[0;37m../test.cpp:251: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f5942f0 != NULL )

[0;37m../test.cpp:252: [1;32mSUCCESS: [0;36mREQUIRE( std::get<float>(var2->m_value.data) == (float)val ) [0mis correct!
  values: REQUIRE( 8.0f == 8.0f )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic

[0;37m../test.cpp:230: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cast.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From INTEGER

[0;37m../test.cpp:237: [1;32mSUCCESS: [0;36mREQUIRE( var != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f5a2190 != NULL )

[0;37m../test.cpp:238: [1;32mSUCCESS: [0;36mREQUIRE( std::get<int>(var->m_value.data) == val ) [0mis correct!
  values: REQUIRE( 8 == 8 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From INTEGER
  To DOUBLE

[0;37m../test.cpp:258: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f5a2610 != NULL )

[0;37m../test.cpp:259: [1;32mSUCCESS: [0;36mREQUIRE( std::get<double>(var2->m_value.data) == (double)val ) [0mis correct!
  values: REQUIRE( 8.0 == 8.0 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic

[0;37m../test.cpp:230: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cast.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From INTEGER

[0;37m../test.cpp:237: [1;32mSUCCESS: [0;36mREQUIRE( var != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f5b0240 != NULL )

[0;37m../test.cpp:238: [1;32mSUCCESS: [0;36mREQUIRE( std::get<int>(var->m_value.data) == val ) [0mis correct!
  values: REQUIRE( 8 == 8 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From INTEGER
  To STRING

[0;37m../test.cpp:265: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f5b0700 != NULL )

[0;37m../test.cpp:266: [1;32mSUCCESS: [0;36mREQUIRE( (std::get<std::string>(var2->m_value.data)).compare(std::to_string(val)) == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic

[0;37m../test.cpp:230: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cast.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From FLOAT

[0;37m../test.cpp:274: [1;32mSUCCESS: [0;36mREQUIRE( var != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f5be910 != NULL )

[0;37m../test.cpp:275: [1;32mSUCCESS: [0;36mREQUIRE( std::get<float>(var->m_value.data) == val ) [0mis correct!
  values: REQUIRE( 16.0f == 16.0f )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From FLOAT
  To INTEGER

[0;37m../test.cpp:281: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f5c0080 != NULL )

[0;37m../test.cpp:282: [1;32mSUCCESS: [0;36mREQUIRE( std::get<int>(var2->m_value.data) == (int)val ) [0mis correct!
  values: REQUIRE( 16 == 16 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic

[0;37m../test.cpp:230: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cast.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From FLOAT

[0;37m../test.cpp:274: [1;32mSUCCESS: [0;36mREQUIRE( var != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f5cc9b0 != NULL )

[0;37m../test.cpp:275: [1;32mSUCCESS: [0;36mREQUIRE( std::get<float>(var->m_value.data) == val ) [0mis correct!
  values: REQUIRE( 16.0f == 16.0f )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From FLOAT
  To DOUBLE

[0;37m../test.cpp:288: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f5ce240 != NULL )

[0;37m../test.cpp:289: [1;32mSUCCESS: [0;36mREQUIRE( std::get<double>(var2->m_value.data) == (double)val ) [0mis correct!
  values: REQUIRE( 16.0 == 16.0 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic

[0;37m../test.cpp:230: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cast.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From FLOAT

[0;37m../test.cpp:274: [1;32mSUCCESS: [0;36mREQUIRE( var != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f5dab50 != NULL )

[0;37m../test.cpp:275: [1;32mSUCCESS: [0;36mREQUIRE( std::get<float>(var->m_value.data) == val ) [0mis correct!
  values: REQUIRE( 16.0f == 16.0f )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From FLOAT
  To STRING

[0;37m../test.cpp:295: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x000055739f5dc500 != NULL )

[0;37m../test.cpp:296: [1;32mSUCCESS: [0;36mREQUIRE( (std::get<std::string>(var2->m_value.data)).compare(std::to_string(val)) == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:86:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
[0;33m
DEEPEST SUBCASE STACK REACHED (DIFFERENT FROM THE CURRENT ONE):
[0m  Testing Cast Logic
  From FLOAT
  To STRING

[0m0.159831 s: Testing Visual Nodes Module
[0m[0;33m===============================================================================
[0;36m[doctest] [0mtest cases:   3 | [0;32m  3 passed[0m | [0m0 failed[0m | [0m0 skipped[0m
[0;36m[doctest] [0massertions: 147 | [0;32m147 passed[0m | [0m0 failed[0m |
[0;36m[doctest] [0mStatus: [0;32mSUCCESS![0m
