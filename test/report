[0;36m[doctest] [0mdoctest version is "2.4.6"
[0;36m[doctest] [0mrun with "--help" for options
[0;33m===============================================================================
[0;37m../test.cpp:35:
[0;33mTEST CASE:  [0mTesting Input/Output Module

[0;37m../test.cpp:37: [1;32mSUCCESS: [0;36mREQUIRE( Input::v_keypresses.size() == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;37m../test.cpp:38: [1;32mSUCCESS: [0;36mREQUIRE( Input::v_keyreleases.size() == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;37m../test.cpp:54: [1;32mSUCCESS: [0;36mCHECK( Input::v_keypresses.size() == 1 ) [0mis correct!
  values: CHECK( 1 == 1 )

[0;37m../test.cpp:55: [1;32mSUCCESS: [0;36mCHECK( Input::v_keyreleases.size() == 1 ) [0mis correct!
  values: CHECK( 1 == 1 )

[0m0.000167 s: Testing Input/Output Module
[0m[0;33m===============================================================================
[0;37m../test.cpp:58:
[0;33mTEST CASE:  [0mTesting Filesystem Module
  Opening valid project

[0;37m../test.cpp:64: [1;32mSUCCESS: [0;36mCHECK( Project::nodes_count == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;37m../test.cpp:65: [1;32mSUCCESS: [0;36mCHECK( Project::connections_count == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;37m../test.cpp:66: [1;32mSUCCESS: [0;36mCHECK( Project::has_open_proj == false ) [0mis correct!
  values: CHECK( false == false )

[0;37m../test.cpp:67: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../../demo/name.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;37m../test.cpp:68: [1;32mSUCCESS: [0;36mCHECK( Project::nodes_count == 6 ) [0mis correct!
  values: CHECK( 6 == 6 )

[0;37m../test.cpp:69: [1;32mSUCCESS: [0;36mCHECK( Project::connections_count == 10 ) [0mis correct!
  values: CHECK( 10 == 10 )

[0;37m../test.cpp:70: [1;32mSUCCESS: [0;36mCHECK( Project::has_open_proj == true ) [0mis correct!
  values: CHECK( true == true )

[0;33m===============================================================================
[0;37m../test.cpp:58:
[0;33mTEST CASE:  [0mTesting Filesystem Module
  Closing valid project

[0;37m../test.cpp:76: [1;32mSUCCESS: [0;36mCHECK( Project::nodes_count == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;37m../test.cpp:77: [1;32mSUCCESS: [0;36mCHECK( Project::connections_count == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;37m../test.cpp:78: [1;32mSUCCESS: [0;36mCHECK( Project::has_open_proj == false ) [0mis correct!
  values: CHECK( false == false )

[0;33m===============================================================================
[0;37m../test.cpp:58:
[0;33mTEST CASE:  [0mTesting Filesystem Module
  Opening invalid project

[0;37m../test.cpp:83: [1;32mSUCCESS: [0;36mCHECK( Project::nodes_count == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;37m../test.cpp:84: [1;32mSUCCESS: [0;36mCHECK( Project::connections_count == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;37m../test.cpp:85: [1;32mSUCCESS: [0;36mCHECK( Project::has_open_proj == false ) [0mis correct!
  values: CHECK( false == false )

[0;37m../test.cpp:86: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../../demo/invalid.cn") == -1 ) [0mis correct!
  values: REQUIRE( -1 == -1 )

[0;37m../test.cpp:87: [1;32mSUCCESS: [0;36mCHECK( Project::nodes_count == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;37m../test.cpp:88: [1;32mSUCCESS: [0;36mCHECK( Project::connections_count == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;37m../test.cpp:89: [1;32mSUCCESS: [0;36mCHECK( Project::has_open_proj == false ) [0mis correct!
  values: CHECK( false == false )

[0;33m===============================================================================
[0;37m../test.cpp:58:
[0;33mTEST CASE:  [0mTesting Filesystem Module
[0;33m
DEEPEST SUBCASE STACK REACHED (DIFFERENT FROM THE CURRENT ONE):
[0m  Opening invalid project

[0m0.001928 s: Testing Filesystem Module
[0m[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic

[0;37m../test.cpp:97: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_op.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  INTEGER

[0;37m../test.cpp:102: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36b8cf0 != NULL )

[0;37m../test.cpp:103: [1;32mSUCCESS: [0;36mCHECK( std::get<int>(var_a->m_value.data) == 32 ) [0mis correct!
  values: CHECK( 32 == 32 )

[0;37m../test.cpp:105: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36b8df0 != NULL )

[0;37m../test.cpp:106: [1;32mSUCCESS: [0;36mCHECK( std::get<int>(var_b->m_value.data) == 64 ) [0mis correct!
  values: CHECK( 64 == 64 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  INTEGER
  Testing Addition Logic

[0;37m../test.cpp:112: [1;32mSUCCESS: [0;36mREQUIRE( node_var != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ba570 != NULL )

[0;37m../test.cpp:113: [1;32mSUCCESS: [0;36mCHECK( std::get<int>(node_var->m_value.data) == 96 ) [0mis correct!
  values: CHECK( 96 == 96 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic

[0;37m../test.cpp:97: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_op.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  INTEGER

[0;37m../test.cpp:102: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36b8cf0 != NULL )

[0;37m../test.cpp:103: [1;32mSUCCESS: [0;36mCHECK( std::get<int>(var_a->m_value.data) == 32 ) [0mis correct!
  values: CHECK( 32 == 32 )

[0;37m../test.cpp:105: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36b8df0 != NULL )

[0;37m../test.cpp:106: [1;32mSUCCESS: [0;36mCHECK( std::get<int>(var_b->m_value.data) == 64 ) [0mis correct!
  values: CHECK( 64 == 64 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  INTEGER
  Testing Subtraction Logic

[0;37m../test.cpp:119: [1;32mSUCCESS: [0;36mREQUIRE( node_var != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36baa70 != NULL )

[0;37m../test.cpp:120: [1;32mSUCCESS: [0;36mCHECK( std::get<int>(node_var->m_value.data) == -32 ) [0mis correct!
  values: CHECK( -32 == -32 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic

[0;37m../test.cpp:97: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_op.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  INTEGER

[0;37m../test.cpp:102: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36b8cf0 != NULL )

[0;37m../test.cpp:103: [1;32mSUCCESS: [0;36mCHECK( std::get<int>(var_a->m_value.data) == 32 ) [0mis correct!
  values: CHECK( 32 == 32 )

[0;37m../test.cpp:105: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36b8df0 != NULL )

[0;37m../test.cpp:106: [1;32mSUCCESS: [0;36mCHECK( std::get<int>(var_b->m_value.data) == 64 ) [0mis correct!
  values: CHECK( 64 == 64 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  INTEGER
  Testing Multiplication Logic

[0;37m../test.cpp:126: [1;32mSUCCESS: [0;36mREQUIRE( node_var != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36b9d10 != NULL )

[0;37m../test.cpp:127: [1;32mSUCCESS: [0;36mCHECK( std::get<int>(node_var->m_value.data) == 2048 ) [0mis correct!
  values: CHECK( 2048 == 2048 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic

[0;37m../test.cpp:97: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_op.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  INTEGER

[0;37m../test.cpp:102: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36b8cf0 != NULL )

[0;37m../test.cpp:103: [1;32mSUCCESS: [0;36mCHECK( std::get<int>(var_a->m_value.data) == 32 ) [0mis correct!
  values: CHECK( 32 == 32 )

[0;37m../test.cpp:105: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36b8df0 != NULL )

[0;37m../test.cpp:106: [1;32mSUCCESS: [0;36mCHECK( std::get<int>(var_b->m_value.data) == 64 ) [0mis correct!
  values: CHECK( 64 == 64 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  INTEGER
  Testing Division Logic

[0;37m../test.cpp:133: [1;32mSUCCESS: [0;36mREQUIRE( node_var != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36babe0 != NULL )

[0;37m../test.cpp:134: [1;32mSUCCESS: [0;36mCHECK( std::get<int>(node_var->m_value.data) == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic

[0;37m../test.cpp:97: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_op.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  FLOAT

[0;37m../test.cpp:141: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36bb350 != NULL )

[0;37m../test.cpp:142: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var_a->m_value.data) == 32.0f ) [0mis correct!
  values: CHECK( 32.0f == 32.0f )

[0;37m../test.cpp:144: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36bb4c0 != NULL )

[0;37m../test.cpp:145: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var_b->m_value.data) == 24.0f ) [0mis correct!
  values: CHECK( 24.0f == 24.0f )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  FLOAT
  Testing Addition Logic

[0;37m../test.cpp:151: [1;32mSUCCESS: [0;36mREQUIRE( node_var != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36b8f60 != NULL )

[0;37m../test.cpp:152: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(node_var->m_value.data) == 56.0f ) [0mis correct!
  values: CHECK( 56.0f == 56.0f )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic

[0;37m../test.cpp:97: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_op.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  FLOAT

[0;37m../test.cpp:141: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36bb350 != NULL )

[0;37m../test.cpp:142: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var_a->m_value.data) == 32.0f ) [0mis correct!
  values: CHECK( 32.0f == 32.0f )

[0;37m../test.cpp:144: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36bb4c0 != NULL )

[0;37m../test.cpp:145: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var_b->m_value.data) == 24.0f ) [0mis correct!
  values: CHECK( 24.0f == 24.0f )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  FLOAT
  Testing Subtraction Logic

[0;37m../test.cpp:158: [1;32mSUCCESS: [0;36mREQUIRE( node_var != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36b90d0 != NULL )

[0;37m../test.cpp:159: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(node_var->m_value.data) == 8.0f ) [0mis correct!
  values: CHECK( 8.0f == 8.0f )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic

[0;37m../test.cpp:97: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_op.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  FLOAT

[0;37m../test.cpp:141: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36bb350 != NULL )

[0;37m../test.cpp:142: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var_a->m_value.data) == 32.0f ) [0mis correct!
  values: CHECK( 32.0f == 32.0f )

[0;37m../test.cpp:144: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36bb4c0 != NULL )

[0;37m../test.cpp:145: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var_b->m_value.data) == 24.0f ) [0mis correct!
  values: CHECK( 24.0f == 24.0f )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  FLOAT
  Testing Multiplication Logic

[0;37m../test.cpp:165: [1;32mSUCCESS: [0;36mREQUIRE( node_var != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36b9240 != NULL )

[0;37m../test.cpp:166: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(node_var->m_value.data) == (32.0f * 24.0f) ) [0mis correct!
  values: CHECK( 768.0f == 768.0f )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic

[0;37m../test.cpp:97: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_op.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  FLOAT

[0;37m../test.cpp:141: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36bb350 != NULL )

[0;37m../test.cpp:142: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var_a->m_value.data) == 32.0f ) [0mis correct!
  values: CHECK( 32.0f == 32.0f )

[0;37m../test.cpp:144: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36bb4c0 != NULL )

[0;37m../test.cpp:145: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var_b->m_value.data) == 24.0f ) [0mis correct!
  values: CHECK( 24.0f == 24.0f )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  FLOAT
  Testing Division Logic

[0;37m../test.cpp:172: [1;32mSUCCESS: [0;36mREQUIRE( node_var != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ba2d0 != NULL )

[0;37m../test.cpp:173: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(node_var->m_value.data) == (32.0f/24.0f) ) [0mis correct!
  values: CHECK( 1.33333f == 1.33333f )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic

[0;37m../test.cpp:97: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_op.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  DOUBLE

[0;37m../test.cpp:180: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36b93b0 != NULL )

[0;37m../test.cpp:181: [1;32mSUCCESS: [0;36mCHECK( std::get<double>(var_a->m_value.data) == 32.0 ) [0mis correct!
  values: CHECK( 32.0 == 32.0 )

[0;37m../test.cpp:183: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36b9520 != NULL )

[0;37m../test.cpp:184: [1;32mSUCCESS: [0;36mCHECK( std::get<double>(var_b->m_value.data) == 24.0 ) [0mis correct!
  values: CHECK( 24.0 == 24.0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  DOUBLE
  Testing Addition Logic

[0;37m../test.cpp:190: [1;32mSUCCESS: [0;36mREQUIRE( node_var != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36b9ba0 != NULL )

[0;37m../test.cpp:191: [1;32mSUCCESS: [0;36mCHECK( std::get<double>(node_var->m_value.data) == 56.0 ) [0mis correct!
  values: CHECK( 56.0 == 56.0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic

[0;37m../test.cpp:97: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_op.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  DOUBLE

[0;37m../test.cpp:180: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36b93b0 != NULL )

[0;37m../test.cpp:181: [1;32mSUCCESS: [0;36mCHECK( std::get<double>(var_a->m_value.data) == 32.0 ) [0mis correct!
  values: CHECK( 32.0 == 32.0 )

[0;37m../test.cpp:183: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36b9520 != NULL )

[0;37m../test.cpp:184: [1;32mSUCCESS: [0;36mCHECK( std::get<double>(var_b->m_value.data) == 24.0 ) [0mis correct!
  values: CHECK( 24.0 == 24.0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  DOUBLE
  Testing Subtraction Logic

[0;37m../test.cpp:197: [1;32mSUCCESS: [0;36mREQUIRE( node_var != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36b9e80 != NULL )

[0;37m../test.cpp:198: [1;32mSUCCESS: [0;36mCHECK( std::get<double>(node_var->m_value.data) == 8.0 ) [0mis correct!
  values: CHECK( 8.0 == 8.0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic

[0;37m../test.cpp:97: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_op.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  DOUBLE

[0;37m../test.cpp:180: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36b93b0 != NULL )

[0;37m../test.cpp:181: [1;32mSUCCESS: [0;36mCHECK( std::get<double>(var_a->m_value.data) == 32.0 ) [0mis correct!
  values: CHECK( 32.0 == 32.0 )

[0;37m../test.cpp:183: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36b9520 != NULL )

[0;37m../test.cpp:184: [1;32mSUCCESS: [0;36mCHECK( std::get<double>(var_b->m_value.data) == 24.0 ) [0mis correct!
  values: CHECK( 24.0 == 24.0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  DOUBLE
  Testing Multiplication Logic

[0;37m../test.cpp:204: [1;32mSUCCESS: [0;36mREQUIRE( node_var != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36b9ff0 != NULL )

[0;37m../test.cpp:205: [1;32mSUCCESS: [0;36mCHECK( std::get<double>(node_var->m_value.data) == (32.0 * 24.0) ) [0mis correct!
  values: CHECK( 768.0 == 768.0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic

[0;37m../test.cpp:97: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_op.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  DOUBLE

[0;37m../test.cpp:180: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36b93b0 != NULL )

[0;37m../test.cpp:181: [1;32mSUCCESS: [0;36mCHECK( std::get<double>(var_a->m_value.data) == 32.0 ) [0mis correct!
  values: CHECK( 32.0 == 32.0 )

[0;37m../test.cpp:183: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36b9520 != NULL )

[0;37m../test.cpp:184: [1;32mSUCCESS: [0;36mCHECK( std::get<double>(var_b->m_value.data) == 24.0 ) [0mis correct!
  values: CHECK( 24.0 == 24.0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  DOUBLE
  Testing Division Logic

[0;37m../test.cpp:211: [1;32mSUCCESS: [0;36mREQUIRE( node_var != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ba160 != NULL )

[0;37m../test.cpp:212: [1;32mSUCCESS: [0;36mCHECK( std::get<double>(node_var->m_value.data) == (32.0/24.0) ) [0mis correct!
  values: CHECK( 1.3333333333 == 1.3333333333 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic

[0;37m../test.cpp:97: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_op.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  STRING

[0;37m../test.cpp:219: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36bad50 != NULL )

[0;37m../test.cpp:220: [1;32mSUCCESS: [0;36mCHECK( (std::get<std::string>(var_a->m_value.data).compare("hello, ") == 0) ) [0mis correct!
  values: CHECK( true )

[0;37m../test.cpp:222: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36baec0 != NULL )

[0;37m../test.cpp:223: [1;32mSUCCESS: [0;36mCHECK( (std::get<std::string>(var_b->m_value.data)).compare("world!") == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Operation Logic
  STRING
  Testing Addition Logic

[0;37m../test.cpp:229: [1;32mSUCCESS: [0;36mREQUIRE( node_var != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36bb1e0 != NULL )

[0;37m../test.cpp:230: [1;32mSUCCESS: [0;36mCHECK( (std::get<std::string>(node_var->m_value.data)).compare("hello, world!") == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic

[0;37m../test.cpp:237: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cast.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From INTEGER

[0;37m../test.cpp:244: [1;32mSUCCESS: [0;36mREQUIRE( var != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36c6670 != NULL )

[0;37m../test.cpp:245: [1;32mSUCCESS: [0;36mCHECK( std::get<int>(var->m_value.data) == val ) [0mis correct!
  values: CHECK( 8 == 8 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From INTEGER
  To BOOL

[0;37m../test.cpp:251: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36c6960 != NULL )

[0;37m../test.cpp:252: [1;32mSUCCESS: [0;36mCHECK( std::get<bool>(var2->m_value.data) == (bool)val ) [0mis correct!
  values: CHECK( true == true )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic

[0;37m../test.cpp:237: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cast.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From INTEGER

[0;37m../test.cpp:244: [1;32mSUCCESS: [0;36mREQUIRE( var != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36c6670 != NULL )

[0;37m../test.cpp:245: [1;32mSUCCESS: [0;36mCHECK( std::get<int>(var->m_value.data) == val ) [0mis correct!
  values: CHECK( 8 == 8 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From INTEGER
  To FLOAT

[0;37m../test.cpp:258: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36c6880 != NULL )

[0;37m../test.cpp:259: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var2->m_value.data) == (float)val ) [0mis correct!
  values: CHECK( 8.0f == 8.0f )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic

[0;37m../test.cpp:237: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cast.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From INTEGER

[0;37m../test.cpp:244: [1;32mSUCCESS: [0;36mREQUIRE( var != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36c6670 != NULL )

[0;37m../test.cpp:245: [1;32mSUCCESS: [0;36mCHECK( std::get<int>(var->m_value.data) == val ) [0mis correct!
  values: CHECK( 8 == 8 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From INTEGER
  To DOUBLE

[0;37m../test.cpp:265: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36c6ad0 != NULL )

[0;37m../test.cpp:266: [1;32mSUCCESS: [0;36mCHECK( std::get<double>(var2->m_value.data) == (double)val ) [0mis correct!
  values: CHECK( 8.0 == 8.0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic

[0;37m../test.cpp:237: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cast.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From INTEGER

[0;37m../test.cpp:244: [1;32mSUCCESS: [0;36mREQUIRE( var != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36c6670 != NULL )

[0;37m../test.cpp:245: [1;32mSUCCESS: [0;36mCHECK( std::get<int>(var->m_value.data) == val ) [0mis correct!
  values: CHECK( 8 == 8 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From INTEGER
  To STRING

[0;37m../test.cpp:272: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36c6bf0 != NULL )

[0;37m../test.cpp:273: [1;32mSUCCESS: [0;36mCHECK( (std::get<std::string>(var2->m_value.data)).compare(std::to_string(val)) == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic

[0;37m../test.cpp:237: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cast.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From FLOAT

[0;37m../test.cpp:281: [1;32mSUCCESS: [0;36mREQUIRE( var != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36c6d10 != NULL )

[0;37m../test.cpp:282: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var->m_value.data) == val ) [0mis correct!
  values: CHECK( 16.0f == 16.0f )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From FLOAT
  To INTEGER

[0;37m../test.cpp:288: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36c8930 != NULL )

[0;37m../test.cpp:289: [1;32mSUCCESS: [0;36mCHECK( std::get<int>(var2->m_value.data) == (int)val ) [0mis correct!
  values: CHECK( 16 == 16 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic

[0;37m../test.cpp:237: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cast.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From FLOAT

[0;37m../test.cpp:281: [1;32mSUCCESS: [0;36mREQUIRE( var != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36c6d10 != NULL )

[0;37m../test.cpp:282: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var->m_value.data) == val ) [0mis correct!
  values: CHECK( 16.0f == 16.0f )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From FLOAT
  To DOUBLE

[0;37m../test.cpp:295: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36c8a50 != NULL )

[0;37m../test.cpp:296: [1;32mSUCCESS: [0;36mCHECK( std::get<double>(var2->m_value.data) == (double)val ) [0mis correct!
  values: CHECK( 16.0 == 16.0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic

[0;37m../test.cpp:237: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cast.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From FLOAT

[0;37m../test.cpp:281: [1;32mSUCCESS: [0;36mREQUIRE( var != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36c6d10 != NULL )

[0;37m../test.cpp:282: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var->m_value.data) == val ) [0mis correct!
  values: CHECK( 16.0f == 16.0f )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From FLOAT
  To STRING

[0;37m../test.cpp:302: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36c8b70 != NULL )

[0;37m../test.cpp:303: [1;32mSUCCESS: [0;36mCHECK( (std::get<std::string>(var2->m_value.data)).compare(std::to_string(val)) == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic

[0;37m../test.cpp:237: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cast.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From DOUBLE

[0;37m../test.cpp:311: [1;32mSUCCESS: [0;36mREQUIRE( var != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36c6e30 != NULL )

[0;37m../test.cpp:312: [1;32mSUCCESS: [0;36mCHECK( std::get<double>(var->m_value.data) == val ) [0mis correct!
  values: CHECK( 32.0 == 32.0f )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From DOUBLE
  To INTEGER

[0;37m../test.cpp:318: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36c7510 != NULL )

[0;37m../test.cpp:319: [1;32mSUCCESS: [0;36mCHECK( std::get<int>(var2->m_value.data) == (int)val ) [0mis correct!
  values: CHECK( 32 == 32 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic

[0;37m../test.cpp:237: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cast.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From DOUBLE

[0;37m../test.cpp:311: [1;32mSUCCESS: [0;36mREQUIRE( var != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36c6e30 != NULL )

[0;37m../test.cpp:312: [1;32mSUCCESS: [0;36mCHECK( std::get<double>(var->m_value.data) == val ) [0mis correct!
  values: CHECK( 32.0 == 32.0f )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From DOUBLE
  To FLOAT

[0;37m../test.cpp:325: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36c7680 != NULL )

[0;37m../test.cpp:326: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var2->m_value.data) == (float)val ) [0mis correct!
  values: CHECK( 32.0f == 32.0f )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic

[0;37m../test.cpp:237: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cast.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From DOUBLE

[0;37m../test.cpp:311: [1;32mSUCCESS: [0;36mREQUIRE( var != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36c6e30 != NULL )

[0;37m../test.cpp:312: [1;32mSUCCESS: [0;36mCHECK( std::get<double>(var->m_value.data) == val ) [0mis correct!
  values: CHECK( 32.0 == 32.0f )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From DOUBLE
  To STRING

[0;37m../test.cpp:332: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36c77f0 != NULL )

[0;37m../test.cpp:333: [1;32mSUCCESS: [0;36mCHECK( (std::get<std::string>(var2->m_value.data)).compare(std::to_string(val)) == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic

[0;37m../test.cpp:237: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cast.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From STRING

[0;37m../test.cpp:341: [1;32mSUCCESS: [0;36mREQUIRE( var != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36c7960 != NULL )

[0;37m../test.cpp:342: [1;32mSUCCESS: [0;36mCHECK( (std::get<std::string>(var->m_value.data)).compare(val) == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From STRING
  To BOOL

[0;37m../test.cpp:348: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36c80d0 != NULL )

[0;37m../test.cpp:349: [1;32mSUCCESS: [0;36mCHECK( std::get<bool>(var2->m_value.data) == false ) [0mis correct!
  values: CHECK( false == false )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic

[0;37m../test.cpp:237: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cast.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From STRING

[0;37m../test.cpp:341: [1;32mSUCCESS: [0;36mREQUIRE( var != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36c7960 != NULL )

[0;37m../test.cpp:342: [1;32mSUCCESS: [0;36mCHECK( (std::get<std::string>(var->m_value.data)).compare(val) == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From STRING
  To INTEGER

[0;37m../test.cpp:355: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36c8240 != NULL )

[0;37m../test.cpp:356: [1;32mSUCCESS: [0;36mCHECK( std::get<int>(var2->m_value.data) == std::stoi(val) ) [0mis correct!
  values: CHECK( 48 == 48 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic

[0;37m../test.cpp:237: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cast.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From STRING

[0;37m../test.cpp:341: [1;32mSUCCESS: [0;36mREQUIRE( var != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36c7960 != NULL )

[0;37m../test.cpp:342: [1;32mSUCCESS: [0;36mCHECK( (std::get<std::string>(var->m_value.data)).compare(val) == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From STRING
  To FLOAT

[0;37m../test.cpp:362: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36c8500 != NULL )

[0;37m../test.cpp:363: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var2->m_value.data) == std::stof(val) ) [0mis correct!
  values: CHECK( 48.64f == 48.64f )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic

[0;37m../test.cpp:237: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cast.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From STRING

[0;37m../test.cpp:341: [1;32mSUCCESS: [0;36mREQUIRE( var != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36c7960 != NULL )

[0;37m../test.cpp:342: [1;32mSUCCESS: [0;36mCHECK( (std::get<std::string>(var->m_value.data)).compare(val) == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Cast Logic
  From STRING
  To DOUBLE

[0;37m../test.cpp:369: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36c8670 != NULL )

[0;37m../test.cpp:370: [1;32mSUCCESS: [0;36mCHECK( std::get<double>(var2->m_value.data) == std::stod(val) ) [0mis correct!
  values: CHECK( 48.64 == 48.64 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic

[0;37m../test.cpp:377: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cmp.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  BOOL

[0;37m../test.cpp:386: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ec910 != NULL )

[0;37m../test.cpp:387: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ec9f0 != NULL )

[0;37m../test.cpp:388: [1;32mSUCCESS: [0;36mCHECK( std::get<bool>(var_a->m_value.data) == val ) [0mis correct!
  values: CHECK( true == true )

[0;37m../test.cpp:389: [1;32mSUCCESS: [0;36mCHECK( std::get<bool>(var_b->m_value.data) == val2 ) [0mis correct!
  values: CHECK( false == false )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  BOOL
  ==

[0;37m../test.cpp:395: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ecf30 != NULL )

[0;37m../test.cpp:396: [1;32mSUCCESS: [0;36mCHECK( std::get<bool>(var2->m_value.data) == (val == val2) ) [0mis correct!
  values: CHECK( false == false )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic

[0;37m../test.cpp:377: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cmp.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  BOOL

[0;37m../test.cpp:386: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ec910 != NULL )

[0;37m../test.cpp:387: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ec9f0 != NULL )

[0;37m../test.cpp:388: [1;32mSUCCESS: [0;36mCHECK( std::get<bool>(var_a->m_value.data) == val ) [0mis correct!
  values: CHECK( true == true )

[0;37m../test.cpp:389: [1;32mSUCCESS: [0;36mCHECK( std::get<bool>(var_b->m_value.data) == val2 ) [0mis correct!
  values: CHECK( false == false )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  BOOL
  !=

[0;37m../test.cpp:401: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ed0a0 != NULL )

[0;37m../test.cpp:402: [1;32mSUCCESS: [0;36mCHECK( std::get<bool>(var2->m_value.data) == (val != val2) ) [0mis correct!
  values: CHECK( true == true )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic

[0;37m../test.cpp:377: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cmp.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  BOOL

[0;37m../test.cpp:386: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ec910 != NULL )

[0;37m../test.cpp:387: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ec9f0 != NULL )

[0;37m../test.cpp:388: [1;32mSUCCESS: [0;36mCHECK( std::get<bool>(var_a->m_value.data) == val ) [0mis correct!
  values: CHECK( true == true )

[0;37m../test.cpp:389: [1;32mSUCCESS: [0;36mCHECK( std::get<bool>(var_b->m_value.data) == val2 ) [0mis correct!
  values: CHECK( false == false )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  BOOL
  ||

[0;37m../test.cpp:407: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ed210 != NULL )

[0;37m../test.cpp:408: [1;32mSUCCESS: [0;36mCHECK( std::get<bool>(var2->m_value.data) == (val || val2) ) [0mis correct!
  values: CHECK( true == true )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic

[0;37m../test.cpp:377: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cmp.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  BOOL

[0;37m../test.cpp:386: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ec910 != NULL )

[0;37m../test.cpp:387: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ec9f0 != NULL )

[0;37m../test.cpp:388: [1;32mSUCCESS: [0;36mCHECK( std::get<bool>(var_a->m_value.data) == val ) [0mis correct!
  values: CHECK( true == true )

[0;37m../test.cpp:389: [1;32mSUCCESS: [0;36mCHECK( std::get<bool>(var_b->m_value.data) == val2 ) [0mis correct!
  values: CHECK( false == false )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  BOOL
  &&

[0;37m../test.cpp:413: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ed380 != NULL )

[0;37m../test.cpp:414: [1;32mSUCCESS: [0;36mCHECK( std::get<bool>(var2->m_value.data) == (val && val2) ) [0mis correct!
  values: CHECK( false == false )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic

[0;37m../test.cpp:377: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cmp.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  INTEGER

[0;37m../test.cpp:424: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ece10 != NULL )

[0;37m../test.cpp:425: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ed4f0 != NULL )

[0;37m../test.cpp:426: [1;32mSUCCESS: [0;36mCHECK( std::get<int>(var_a->m_value.data) == val ) [0mis correct!
  values: CHECK( 32 == 32 )

[0;37m../test.cpp:427: [1;32mSUCCESS: [0;36mCHECK( std::get<int>(var_b->m_value.data) == val2 ) [0mis correct!
  values: CHECK( 64 == 64 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  INTEGER
  ==

[0;37m../test.cpp:433: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ed890 != NULL )

[0;37m../test.cpp:434: [1;32mSUCCESS: [0;36mCHECK( std::get<bool>(var2->m_value.data) == (val == val2) ) [0mis correct!
  values: CHECK( false == false )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic

[0;37m../test.cpp:377: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cmp.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  INTEGER

[0;37m../test.cpp:424: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ece10 != NULL )

[0;37m../test.cpp:425: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ed4f0 != NULL )

[0;37m../test.cpp:426: [1;32mSUCCESS: [0;36mCHECK( std::get<int>(var_a->m_value.data) == val ) [0mis correct!
  values: CHECK( 32 == 32 )

[0;37m../test.cpp:427: [1;32mSUCCESS: [0;36mCHECK( std::get<int>(var_b->m_value.data) == val2 ) [0mis correct!
  values: CHECK( 64 == 64 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  INTEGER
  !=

[0;37m../test.cpp:439: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36f1570 != NULL )

[0;37m../test.cpp:440: [1;32mSUCCESS: [0;36mCHECK( std::get<bool>(var2->m_value.data) == (val != val2) ) [0mis correct!
  values: CHECK( true == true )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic

[0;37m../test.cpp:377: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cmp.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  INTEGER

[0;37m../test.cpp:424: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ece10 != NULL )

[0;37m../test.cpp:425: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ed4f0 != NULL )

[0;37m../test.cpp:426: [1;32mSUCCESS: [0;36mCHECK( std::get<int>(var_a->m_value.data) == val ) [0mis correct!
  values: CHECK( 32 == 32 )

[0;37m../test.cpp:427: [1;32mSUCCESS: [0;36mCHECK( std::get<int>(var_b->m_value.data) == val2 ) [0mis correct!
  values: CHECK( 64 == 64 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  INTEGER
  <

[0;37m../test.cpp:445: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ee7c0 != NULL )

[0;37m../test.cpp:446: [1;32mSUCCESS: [0;36mCHECK( std::get<bool>(var2->m_value.data) == (val < val2) ) [0mis correct!
  values: CHECK( true == true )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic

[0;37m../test.cpp:377: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cmp.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  INTEGER

[0;37m../test.cpp:424: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ece10 != NULL )

[0;37m../test.cpp:425: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ed4f0 != NULL )

[0;37m../test.cpp:426: [1;32mSUCCESS: [0;36mCHECK( std::get<int>(var_a->m_value.data) == val ) [0mis correct!
  values: CHECK( 32 == 32 )

[0;37m../test.cpp:427: [1;32mSUCCESS: [0;36mCHECK( std::get<int>(var_b->m_value.data) == val2 ) [0mis correct!
  values: CHECK( 64 == 64 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  INTEGER
  >

[0;37m../test.cpp:451: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36f1400 != NULL )

[0;37m../test.cpp:452: [1;32mSUCCESS: [0;36mCHECK( std::get<bool>(var2->m_value.data) == (val > val2) ) [0mis correct!
  values: CHECK( false == false )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic

[0;37m../test.cpp:377: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cmp.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  INTEGER

[0;37m../test.cpp:424: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ece10 != NULL )

[0;37m../test.cpp:425: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ed4f0 != NULL )

[0;37m../test.cpp:426: [1;32mSUCCESS: [0;36mCHECK( std::get<int>(var_a->m_value.data) == val ) [0mis correct!
  values: CHECK( 32 == 32 )

[0;37m../test.cpp:427: [1;32mSUCCESS: [0;36mCHECK( std::get<int>(var_b->m_value.data) == val2 ) [0mis correct!
  values: CHECK( 64 == 64 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  INTEGER
  <=

[0;37m../test.cpp:457: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36f07b0 != NULL )

[0;37m../test.cpp:458: [1;32mSUCCESS: [0;36mCHECK( std::get<bool>(var2->m_value.data) == (val <= val2) ) [0mis correct!
  values: CHECK( true == true )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic

[0;37m../test.cpp:377: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cmp.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  INTEGER

[0;37m../test.cpp:424: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ece10 != NULL )

[0;37m../test.cpp:425: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ed4f0 != NULL )

[0;37m../test.cpp:426: [1;32mSUCCESS: [0;36mCHECK( std::get<int>(var_a->m_value.data) == val ) [0mis correct!
  values: CHECK( 32 == 32 )

[0;37m../test.cpp:427: [1;32mSUCCESS: [0;36mCHECK( std::get<int>(var_b->m_value.data) == val2 ) [0mis correct!
  values: CHECK( 64 == 64 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  INTEGER
  >=

[0;37m../test.cpp:463: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36f16e0 != NULL )

[0;37m../test.cpp:464: [1;32mSUCCESS: [0;36mCHECK( std::get<bool>(var2->m_value.data) == (val >= val2) ) [0mis correct!
  values: CHECK( false == false )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic

[0;37m../test.cpp:377: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cmp.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  FLOAT

[0;37m../test.cpp:474: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36edf90 != NULL )

[0;37m../test.cpp:475: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ee0b0 != NULL )

[0;37m../test.cpp:476: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var_a->m_value.data) == val ) [0mis correct!
  values: CHECK( 32.32323f == 32.32323f )

[0;37m../test.cpp:477: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var_b->m_value.data) == val2 ) [0mis correct!
  values: CHECK( 64.64646f == 64.64646f )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  FLOAT
  ==

[0;37m../test.cpp:483: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36eec70 != NULL )

[0;37m../test.cpp:484: [1;32mSUCCESS: [0;36mCHECK( std::get<bool>(var2->m_value.data) == (val == val2) ) [0mis correct!
  values: CHECK( false == false )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic

[0;37m../test.cpp:377: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cmp.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  FLOAT

[0;37m../test.cpp:474: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36edf90 != NULL )

[0;37m../test.cpp:475: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ee0b0 != NULL )

[0;37m../test.cpp:476: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var_a->m_value.data) == val ) [0mis correct!
  values: CHECK( 32.32323f == 32.32323f )

[0;37m../test.cpp:477: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var_b->m_value.data) == val2 ) [0mis correct!
  values: CHECK( 64.64646f == 64.64646f )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  FLOAT
  !=

[0;37m../test.cpp:489: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36eede0 != NULL )

[0;37m../test.cpp:490: [1;32mSUCCESS: [0;36mCHECK( std::get<bool>(var2->m_value.data) == (val != val2) ) [0mis correct!
  values: CHECK( true == true )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic

[0;37m../test.cpp:377: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cmp.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  FLOAT

[0;37m../test.cpp:474: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36edf90 != NULL )

[0;37m../test.cpp:475: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ee0b0 != NULL )

[0;37m../test.cpp:476: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var_a->m_value.data) == val ) [0mis correct!
  values: CHECK( 32.32323f == 32.32323f )

[0;37m../test.cpp:477: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var_b->m_value.data) == val2 ) [0mis correct!
  values: CHECK( 64.64646f == 64.64646f )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  FLOAT
  <

[0;37m../test.cpp:495: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36eef50 != NULL )

[0;37m../test.cpp:496: [1;32mSUCCESS: [0;36mCHECK( std::get<bool>(var2->m_value.data) == (val < val2) ) [0mis correct!
  values: CHECK( true == true )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic

[0;37m../test.cpp:377: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cmp.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  FLOAT

[0;37m../test.cpp:474: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36edf90 != NULL )

[0;37m../test.cpp:475: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ee0b0 != NULL )

[0;37m../test.cpp:476: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var_a->m_value.data) == val ) [0mis correct!
  values: CHECK( 32.32323f == 32.32323f )

[0;37m../test.cpp:477: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var_b->m_value.data) == val2 ) [0mis correct!
  values: CHECK( 64.64646f == 64.64646f )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  FLOAT
  >

[0;37m../test.cpp:501: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ef0c0 != NULL )

[0;37m../test.cpp:502: [1;32mSUCCESS: [0;36mCHECK( std::get<bool>(var2->m_value.data) == (val > val2) ) [0mis correct!
  values: CHECK( false == false )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic

[0;37m../test.cpp:377: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cmp.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  FLOAT

[0;37m../test.cpp:474: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36edf90 != NULL )

[0;37m../test.cpp:475: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ee0b0 != NULL )

[0;37m../test.cpp:476: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var_a->m_value.data) == val ) [0mis correct!
  values: CHECK( 32.32323f == 32.32323f )

[0;37m../test.cpp:477: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var_b->m_value.data) == val2 ) [0mis correct!
  values: CHECK( 64.64646f == 64.64646f )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  FLOAT
  <=

[0;37m../test.cpp:507: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ef230 != NULL )

[0;37m../test.cpp:508: [1;32mSUCCESS: [0;36mCHECK( std::get<bool>(var2->m_value.data) == (val <= val2) ) [0mis correct!
  values: CHECK( true == true )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic

[0;37m../test.cpp:377: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cmp.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  FLOAT

[0;37m../test.cpp:474: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36edf90 != NULL )

[0;37m../test.cpp:475: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ee0b0 != NULL )

[0;37m../test.cpp:476: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var_a->m_value.data) == val ) [0mis correct!
  values: CHECK( 32.32323f == 32.32323f )

[0;37m../test.cpp:477: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var_b->m_value.data) == val2 ) [0mis correct!
  values: CHECK( 64.64646f == 64.64646f )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  FLOAT
  >=

[0;37m../test.cpp:513: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ef3a0 != NULL )

[0;37m../test.cpp:514: [1;32mSUCCESS: [0;36mCHECK( std::get<bool>(var2->m_value.data) == (val >= val2) ) [0mis correct!
  values: CHECK( false == false )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic

[0;37m../test.cpp:377: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cmp.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  DOUBLE

[0;37m../test.cpp:524: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ef510 != NULL )

[0;37m../test.cpp:525: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ef630 != NULL )

[0;37m../test.cpp:526: [1;32mSUCCESS: [0;36mCHECK( std::get<double>(var_a->m_value.data) == val ) [0mis correct!
  values: CHECK( 32.323232 == 32.323232 )

[0;37m../test.cpp:527: [1;32mSUCCESS: [0;36mCHECK( std::get<double>(var_b->m_value.data) == val2 ) [0mis correct!
  values: CHECK( 64.646464 == 64.646464 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  DOUBLE
  ==

[0;37m../test.cpp:533: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36f01f0 != NULL )

[0;37m../test.cpp:534: [1;32mSUCCESS: [0;36mCHECK( std::get<bool>(var2->m_value.data) == (val == val2) ) [0mis correct!
  values: CHECK( false == false )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic

[0;37m../test.cpp:377: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cmp.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  DOUBLE

[0;37m../test.cpp:524: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ef510 != NULL )

[0;37m../test.cpp:525: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ef630 != NULL )

[0;37m../test.cpp:526: [1;32mSUCCESS: [0;36mCHECK( std::get<double>(var_a->m_value.data) == val ) [0mis correct!
  values: CHECK( 32.323232 == 32.323232 )

[0;37m../test.cpp:527: [1;32mSUCCESS: [0;36mCHECK( std::get<double>(var_b->m_value.data) == val2 ) [0mis correct!
  values: CHECK( 64.646464 == 64.646464 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  DOUBLE
  !=

[0;37m../test.cpp:539: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36f0360 != NULL )

[0;37m../test.cpp:540: [1;32mSUCCESS: [0;36mCHECK( std::get<bool>(var2->m_value.data) == (val != val2) ) [0mis correct!
  values: CHECK( true == true )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic

[0;37m../test.cpp:377: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cmp.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  DOUBLE

[0;37m../test.cpp:524: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ef510 != NULL )

[0;37m../test.cpp:525: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ef630 != NULL )

[0;37m../test.cpp:526: [1;32mSUCCESS: [0;36mCHECK( std::get<double>(var_a->m_value.data) == val ) [0mis correct!
  values: CHECK( 32.323232 == 32.323232 )

[0;37m../test.cpp:527: [1;32mSUCCESS: [0;36mCHECK( std::get<double>(var_b->m_value.data) == val2 ) [0mis correct!
  values: CHECK( 64.646464 == 64.646464 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  DOUBLE
  <

[0;37m../test.cpp:545: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36f04d0 != NULL )

[0;37m../test.cpp:546: [1;32mSUCCESS: [0;36mCHECK( std::get<bool>(var2->m_value.data) == (val < val2) ) [0mis correct!
  values: CHECK( true == true )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic

[0;37m../test.cpp:377: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cmp.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  DOUBLE

[0;37m../test.cpp:524: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ef510 != NULL )

[0;37m../test.cpp:525: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ef630 != NULL )

[0;37m../test.cpp:526: [1;32mSUCCESS: [0;36mCHECK( std::get<double>(var_a->m_value.data) == val ) [0mis correct!
  values: CHECK( 32.323232 == 32.323232 )

[0;37m../test.cpp:527: [1;32mSUCCESS: [0;36mCHECK( std::get<double>(var_b->m_value.data) == val2 ) [0mis correct!
  values: CHECK( 64.646464 == 64.646464 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  DOUBLE
  >

[0;37m../test.cpp:551: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36f0640 != NULL )

[0;37m../test.cpp:552: [1;32mSUCCESS: [0;36mCHECK( std::get<bool>(var2->m_value.data) == (val > val2) ) [0mis correct!
  values: CHECK( false == false )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic

[0;37m../test.cpp:377: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cmp.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  DOUBLE

[0;37m../test.cpp:524: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ef510 != NULL )

[0;37m../test.cpp:525: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ef630 != NULL )

[0;37m../test.cpp:526: [1;32mSUCCESS: [0;36mCHECK( std::get<double>(var_a->m_value.data) == val ) [0mis correct!
  values: CHECK( 32.323232 == 32.323232 )

[0;37m../test.cpp:527: [1;32mSUCCESS: [0;36mCHECK( std::get<double>(var_b->m_value.data) == val2 ) [0mis correct!
  values: CHECK( 64.646464 == 64.646464 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  DOUBLE
  <=

[0;37m../test.cpp:557: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36f0a90 != NULL )

[0;37m../test.cpp:558: [1;32mSUCCESS: [0;36mCHECK( std::get<bool>(var2->m_value.data) == (val <= val2) ) [0mis correct!
  values: CHECK( true == true )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic

[0;37m../test.cpp:377: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cmp.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  DOUBLE

[0;37m../test.cpp:524: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ef510 != NULL )

[0;37m../test.cpp:525: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ef630 != NULL )

[0;37m../test.cpp:526: [1;32mSUCCESS: [0;36mCHECK( std::get<double>(var_a->m_value.data) == val ) [0mis correct!
  values: CHECK( 32.323232 == 32.323232 )

[0;37m../test.cpp:527: [1;32mSUCCESS: [0;36mCHECK( std::get<double>(var_b->m_value.data) == val2 ) [0mis correct!
  values: CHECK( 64.646464 == 64.646464 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  DOUBLE
  >=

[0;37m../test.cpp:563: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36f0920 != NULL )

[0;37m../test.cpp:564: [1;32mSUCCESS: [0;36mCHECK( std::get<bool>(var2->m_value.data) == (val >= val2) ) [0mis correct!
  values: CHECK( false == false )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic

[0;37m../test.cpp:377: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cmp.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  STRING

[0;37m../test.cpp:574: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36f0c00 != NULL )

[0;37m../test.cpp:575: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36f0d20 != NULL )

[0;37m../test.cpp:576: [1;32mSUCCESS: [0;36mCHECK( std::get<std::string>(var_a->m_value.data) == val ) [0mis correct!
  values: CHECK( abc == abc )

[0;37m../test.cpp:577: [1;32mSUCCESS: [0;36mCHECK( std::get<std::string>(var_b->m_value.data) == val2 ) [0mis correct!
  values: CHECK( def == def )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  STRING
  ==

[0;37m../test.cpp:583: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36f1120 != NULL )

[0;37m../test.cpp:584: [1;32mSUCCESS: [0;36mCHECK( std::get<bool>(var2->m_value.data) == (val == val2) ) [0mis correct!
  values: CHECK( false == false )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic

[0;37m../test.cpp:377: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_cmp.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  STRING

[0;37m../test.cpp:574: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36f0c00 != NULL )

[0;37m../test.cpp:575: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36f0d20 != NULL )

[0;37m../test.cpp:576: [1;32mSUCCESS: [0;36mCHECK( std::get<std::string>(var_a->m_value.data) == val ) [0mis correct!
  values: CHECK( abc == abc )

[0;37m../test.cpp:577: [1;32mSUCCESS: [0;36mCHECK( std::get<std::string>(var_b->m_value.data) == val2 ) [0mis correct!
  values: CHECK( def == def )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Comparison Logic
  STRING
  !=

[0;37m../test.cpp:589: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36f1290 != NULL )

[0;37m../test.cpp:590: [1;32mSUCCESS: [0;36mCHECK( std::get<bool>(var2->m_value.data) == (val != val2) ) [0mis correct!
  values: CHECK( true == true )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Math Logic

[0;37m../test.cpp:597: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_math.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;37m../test.cpp:602: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36a85c0 != NULL )

[0;37m../test.cpp:603: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36a86a0 != NULL )

[0;37m../test.cpp:604: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var_a->m_value.data) == val ) [0mis correct!
  values: CHECK( 64.0f == 64.0f )

[0;37m../test.cpp:605: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var_b->m_value.data) == val2 ) [0mis correct!
  values: CHECK( 2.0f == 2.0f )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Math Logic
  ROOT

[0;37m../test.cpp:613: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ad5e0 != NULL )

[0;37m../test.cpp:614: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var2->m_value.data) == res ) [0mis correct!
  values: CHECK( 1.01089f == 1.01089f )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Math Logic

[0;37m../test.cpp:597: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_math.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;37m../test.cpp:602: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36a85c0 != NULL )

[0;37m../test.cpp:603: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36a86a0 != NULL )

[0;37m../test.cpp:604: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var_a->m_value.data) == val ) [0mis correct!
  values: CHECK( 64.0f == 64.0f )

[0;37m../test.cpp:605: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var_b->m_value.data) == val2 ) [0mis correct!
  values: CHECK( 2.0f == 2.0f )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Math Logic
  POW

[0;37m../test.cpp:622: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ad750 != NULL )

[0;37m../test.cpp:623: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var2->m_value.data) == res ) [0mis correct!
  values: CHECK( 4096.0f == 4096.0f )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Math Logic

[0;37m../test.cpp:597: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_math.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;37m../test.cpp:602: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36a85c0 != NULL )

[0;37m../test.cpp:603: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36a86a0 != NULL )

[0;37m../test.cpp:604: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var_a->m_value.data) == val ) [0mis correct!
  values: CHECK( 64.0f == 64.0f )

[0;37m../test.cpp:605: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var_b->m_value.data) == val2 ) [0mis correct!
  values: CHECK( 2.0f == 2.0f )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Math Logic
  SIN

[0;37m../test.cpp:631: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ad8c0 != NULL )

[0;37m../test.cpp:632: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var2->m_value.data) == res ) [0mis correct!
  values: CHECK( 0.92003f == 0.92003f )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Math Logic

[0;37m../test.cpp:597: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_math.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;37m../test.cpp:602: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36a85c0 != NULL )

[0;37m../test.cpp:603: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36a86a0 != NULL )

[0;37m../test.cpp:604: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var_a->m_value.data) == val ) [0mis correct!
  values: CHECK( 64.0f == 64.0f )

[0;37m../test.cpp:605: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var_b->m_value.data) == val2 ) [0mis correct!
  values: CHECK( 2.0f == 2.0f )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Math Logic
  COS

[0;37m../test.cpp:640: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36a6d30 != NULL )

[0;37m../test.cpp:641: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var2->m_value.data) == res ) [0mis correct!
  values: CHECK( 0.39186f == 0.39186f )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Math Logic

[0;37m../test.cpp:597: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_math.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;37m../test.cpp:602: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36a85c0 != NULL )

[0;37m../test.cpp:603: [1;32mSUCCESS: [0;36mREQUIRE( var_b != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36a86a0 != NULL )

[0;37m../test.cpp:604: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var_a->m_value.data) == val ) [0mis correct!
  values: CHECK( 64.0f == 64.0f )

[0;37m../test.cpp:605: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var_b->m_value.data) == val2 ) [0mis correct!
  values: CHECK( 2.0f == 2.0f )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing Math Logic
  tan

[0;37m../test.cpp:649: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36a6e60 != NULL )

[0;37m../test.cpp:650: [1;32mSUCCESS: [0;36mCHECK( std::get<float>(var2->m_value.data) == res ) [0mis correct!
  values: CHECK( 2.34786f == 2.34786f )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing String Logic

[0;37m../test.cpp:656: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_string.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;37m../test.cpp:659: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36d01a0 != NULL )

[0;37m../test.cpp:660: [1;32mSUCCESS: [0;36mCHECK( (std::get<std::string>(var_a->m_value.data)).compare(val) == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing String Logic
  To Lowercase

[0;37m../test.cpp:666: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36d0500 != NULL )

[0;37m../test.cpp:672: [1;32mSUCCESS: [0;36mCHECK( res.compare(res2) == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing String Logic

[0;37m../test.cpp:656: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_string.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;37m../test.cpp:659: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36d01a0 != NULL )

[0;37m../test.cpp:660: [1;32mSUCCESS: [0;36mCHECK( (std::get<std::string>(var_a->m_value.data)).compare(val) == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing String Logic
  To Uppercase

[0;37m../test.cpp:678: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36d0670 != NULL )

[0;37m../test.cpp:684: [1;32mSUCCESS: [0;36mCHECK( res.compare(res2) == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing String Logic

[0;37m../test.cpp:656: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_string.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;37m../test.cpp:659: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36d01a0 != NULL )

[0;37m../test.cpp:660: [1;32mSUCCESS: [0;36mCHECK( (std::get<std::string>(var_a->m_value.data)).compare(val) == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing String Logic
  Reverse

[0;37m../test.cpp:690: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36d07e0 != NULL )

[0;37m../test.cpp:695: [1;32mSUCCESS: [0;36mCHECK( res.compare(res2) == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing String Logic

[0;37m../test.cpp:656: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_string.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;37m../test.cpp:659: [1;32mSUCCESS: [0;36mREQUIRE( var_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36d01a0 != NULL )

[0;37m../test.cpp:660: [1;32mSUCCESS: [0;36mCHECK( (std::get<std::string>(var_a->m_value.data)).compare(val) == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
  Testing String Logic
  To Array

[0;37m../test.cpp:701: [1;32mSUCCESS: [0;36mREQUIRE( var2 != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36d0aa0 != NULL )

[0;37m../test.cpp:712: [1;32mSUCCESS: [0;36mREQUIRE( res.size() == var2->m_from_string.size() ) [0mis correct!
  values: REQUIRE( 13 == 13 )

[0;37m../test.cpp:720: [1;32mSUCCESS: [0;36mCHECK( a.compare(b) == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;37m../test.cpp:720: [1;32mSUCCESS: [0;36mCHECK( a.compare(b) == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;37m../test.cpp:720: [1;32mSUCCESS: [0;36mCHECK( a.compare(b) == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;37m../test.cpp:720: [1;32mSUCCESS: [0;36mCHECK( a.compare(b) == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;37m../test.cpp:720: [1;32mSUCCESS: [0;36mCHECK( a.compare(b) == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;37m../test.cpp:720: [1;32mSUCCESS: [0;36mCHECK( a.compare(b) == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;37m../test.cpp:720: [1;32mSUCCESS: [0;36mCHECK( a.compare(b) == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;37m../test.cpp:720: [1;32mSUCCESS: [0;36mCHECK( a.compare(b) == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;37m../test.cpp:720: [1;32mSUCCESS: [0;36mCHECK( a.compare(b) == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;37m../test.cpp:720: [1;32mSUCCESS: [0;36mCHECK( a.compare(b) == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;37m../test.cpp:720: [1;32mSUCCESS: [0;36mCHECK( a.compare(b) == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;37m../test.cpp:720: [1;32mSUCCESS: [0;36mCHECK( a.compare(b) == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;37m../test.cpp:720: [1;32mSUCCESS: [0;36mCHECK( a.compare(b) == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:93:
[0;33mTEST CASE:  [0mTesting Visual Nodes Module
[0;33m
DEEPEST SUBCASE STACK REACHED (DIFFERENT FROM THE CURRENT ONE):
[0m  Testing String Logic
  To Array

[0m0.071329 s: Testing Visual Nodes Module
[0m[0;33m===============================================================================
[0;37m../test.cpp:726:
[0;33mTEST CASE:  [0mTesting Transpiler Module

[0;37m../test.cpp:728: [1;32mSUCCESS: [0;36mCHECK( Transpiler::v_declarations.size() == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;37m../test.cpp:729: [1;32mSUCCESS: [0;36mCHECK( Transpiler::level == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;37m../test.cpp:730: [1;32mSUCCESS: [0;36mCHECK( Transpiler::has_ran == false ) [0mis correct!
  values: CHECK( false == false )

[0;37m../test.cpp:731: [1;32mSUCCESS: [0;36mCHECK( Transpiler::has_compiled == false ) [0mis correct!
  values: CHECK( false == false )

[0;37m../test.cpp:732: [1;32mSUCCESS: [0;36mCHECK( Transpiler::n_transpiled == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;37m../test.cpp:733: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_op.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;37m../test.cpp:738: [1;32mSUCCESS: [0;36mREQUIRE( Transpiler::compile() == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;37m../test.cpp:739: [1;32mSUCCESS: [0;36mCHECK( Transpiler::level == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;37m../test.cpp:740: [1;32mSUCCESS: [0;36mCHECK( Transpiler::has_compiled == true ) [0mis correct!
  values: CHECK( true == true )

[0;37m../test.cpp:741: [1;32mSUCCESS: [0;36mCHECK( Transpiler::n_transpiled == 34 ) [0mis correct!
  values: CHECK( 34 == 34 )

[0m0.012179 s: Testing Transpiler Module
[0m[0;33m===============================================================================
[0;37m../test.cpp:744:
[0;33mTEST CASE:  [0mTesting Debugger Module

[0;37m../test.cpp:746: [1;32mSUCCESS: [0;36mCHECK( Debugger::v_msg_info.size() == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0;37m../test.cpp:747: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_op.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;37m../test.cpp:750: [1;32mSUCCESS: [0;36mREQUIRE( node_a != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ff650 != NULL )

[0;37m../test.cpp:751: [1;32mSUCCESS: [0;36mREQUIRE( node_op != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ff890 != NULL )

[0;37m../test.cpp:765: [1;32mSUCCESS: [0;36mCHECK( has_deleted == true ) [0mis correct!
  values: CHECK( true == true )

[0;37m../test.cpp:767: [1;32mSUCCESS: [0;36mREQUIRE( Debugger::v_msg_info.size() != 0 ) [0mis correct!
  values: REQUIRE( 1 != 0 )

[0;37m../test.cpp:769: [1;32mSUCCESS: [0;36mCHECK( Debugger::v_msg_info.size() == 0 ) [0mis correct!
  values: CHECK( 0 == 0 )

[0m0.000516 s: Testing Debugger Module
[0m[0;33m===============================================================================
[0;37m../test.cpp:772:
[0;33mTEST CASE:  [0mTesting Simulation Module

[0;37m../test.cpp:774: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_for.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:772:
[0;33mTEST CASE:  [0mTesting Simulation Module
  Testing single For-Loop

[0;37m../test.cpp:779: [1;32mSUCCESS: [0;36mREQUIRE( node_for != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c38cfc30 != NULL )

[0;33m===============================================================================
[0;37m../test.cpp:772:
[0;33mTEST CASE:  [0mTesting Simulation Module
  Testing single For-Loop
  iteration #0

[0;37m../test.cpp:787: [1;32mSUCCESS: [0;36mREQUIRE( node_for->m_override_it == i ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:772:
[0;33mTEST CASE:  [0mTesting Simulation Module

[0;37m../test.cpp:774: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_for.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:772:
[0;33mTEST CASE:  [0mTesting Simulation Module
  Testing single For-Loop

[0;37m../test.cpp:779: [1;32mSUCCESS: [0;36mREQUIRE( node_for != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c38cfc30 != NULL )

[0;33m===============================================================================
[0;37m../test.cpp:772:
[0;33mTEST CASE:  [0mTesting Simulation Module
  Testing single For-Loop
  iteration #1

[0;37m../test.cpp:787: [1;32mSUCCESS: [0;36mREQUIRE( node_for->m_override_it == i ) [0mis correct!
  values: REQUIRE( 1 == 1 )

[0;33m===============================================================================
[0;37m../test.cpp:772:
[0;33mTEST CASE:  [0mTesting Simulation Module

[0;37m../test.cpp:774: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_for.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:772:
[0;33mTEST CASE:  [0mTesting Simulation Module
  Testing single For-Loop

[0;37m../test.cpp:779: [1;32mSUCCESS: [0;36mREQUIRE( node_for != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c38cfc30 != NULL )

[0;33m===============================================================================
[0;37m../test.cpp:772:
[0;33mTEST CASE:  [0mTesting Simulation Module
  Testing single For-Loop
  iteration #2

[0;37m../test.cpp:787: [1;32mSUCCESS: [0;36mREQUIRE( node_for->m_override_it == i ) [0mis correct!
  values: REQUIRE( 2 == 2 )

[0;33m===============================================================================
[0;37m../test.cpp:772:
[0;33mTEST CASE:  [0mTesting Simulation Module

[0;37m../test.cpp:774: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_for.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:772:
[0;33mTEST CASE:  [0mTesting Simulation Module
  Testing single For-Loop

[0;37m../test.cpp:779: [1;32mSUCCESS: [0;36mREQUIRE( node_for != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c38cfc30 != NULL )

[0;33m===============================================================================
[0;37m../test.cpp:772:
[0;33mTEST CASE:  [0mTesting Simulation Module
  Testing single For-Loop
  iteration #3

[0;37m../test.cpp:787: [1;32mSUCCESS: [0;36mREQUIRE( node_for->m_override_it == i ) [0mis correct!
  values: REQUIRE( 3 == 3 )

[0;33m===============================================================================
[0;37m../test.cpp:772:
[0;33mTEST CASE:  [0mTesting Simulation Module

[0;37m../test.cpp:774: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_for.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:772:
[0;33mTEST CASE:  [0mTesting Simulation Module
  Testing single For-Loop

[0;37m../test.cpp:779: [1;32mSUCCESS: [0;36mREQUIRE( node_for != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c38cfc30 != NULL )

[0;33m===============================================================================
[0;37m../test.cpp:772:
[0;33mTEST CASE:  [0mTesting Simulation Module
  Testing single For-Loop
  iteration #4

[0;37m../test.cpp:787: [1;32mSUCCESS: [0;36mREQUIRE( node_for->m_override_it == i ) [0mis correct!
  values: REQUIRE( 4 == 4 )

[0;33m===============================================================================
[0;37m../test.cpp:772:
[0;33mTEST CASE:  [0mTesting Simulation Module

[0;37m../test.cpp:774: [1;32mSUCCESS: [0;36mREQUIRE( Project::open("../test_for.cn") == 0 ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:772:
[0;33mTEST CASE:  [0mTesting Simulation Module
  Testing nested For-Loops

[0;37m../test.cpp:797: [1;32mSUCCESS: [0;36mREQUIRE( node_for_i != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c36ab470 != NULL )

[0;37m../test.cpp:798: [1;32mSUCCESS: [0;36mREQUIRE( node_for_j != nullptr ) [0mis correct!
  values: REQUIRE( 0x00005595c38cfc30 != NULL )

[0;33m===============================================================================
[0;37m../test.cpp:772:
[0;33mTEST CASE:  [0mTesting Simulation Module
  Testing nested For-Loops
  outer iteration #0
  inner iteration #0

[0;37m../test.cpp:813: [1;32mSUCCESS: [0;36mREQUIRE( node_for_j->m_override_it == j ) [0mis correct!
  values: REQUIRE( 0 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:772:
[0;33mTEST CASE:  [0mTesting Simulation Module
  Testing nested For-Loops
  outer iteration #0
[0;33m
DEEPEST SUBCASE STACK REACHED (DIFFERENT FROM THE CURRENT ONE):
[0m  Testing nested For-Loops
  outer iteration #0
  inner iteration #0

[0;37m../test.cpp:816: [0;31mFATAL ERROR: [0;36mREQUIRE( node_for_i->m_override_it == i ) [0mis NOT correct!
  values: REQUIRE( 1 == 0 )

[0;33m===============================================================================
[0;37m../test.cpp:772:
[0;33mTEST CASE:  [0mTesting Simulation Module
[0;33m
DEEPEST SUBCASE STACK REACHED (DIFFERENT FROM THE CURRENT ONE):
[0m  Testing nested For-Loops
  outer iteration #0
  inner iteration #0

[0m0.002638 s: Testing Simulation Module
[0m[0;33m===============================================================================
[0;36m[doctest] [0mtest cases:   6 | [0m  5 passed[0m | [0;31m1 failed[0m | [0m0 skipped[0m
[0;36m[doctest] [0massertions: 455 | [0m454 passed[0m | [0;31m1 failed[0m |
[0;36m[doctest] [0mStatus: [0;31mFAILURE![0m
